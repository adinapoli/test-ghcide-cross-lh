(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun GHC.Show.showParen () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1130 () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 () Int)
(declare-fun Toy.A.$36$tcD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807715$35$$35$d3FF () Str)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$723 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_karg$36$VV$35$$35$722$35$$35$k_$35$$35$723 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807711$35$$35$d3FB () Int)
(declare-fun addrLen () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807719$35$$35$d3FJ () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$960 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun fix$36$$36$krep_a3Cq () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$884 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun Toy.A.$36$tc$39$MkD2 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1044 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807708$35$$35$d3Fy () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 () Int)
(declare-fun GHC.Types.$36$tcInt () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807744$35$$35$d3G8 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807731$35$$35$d3FV () Str)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$884 () Int)
(declare-fun System.IO.print () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_karg$36$VV$35$$35$883$35$$35$k_$35$$35$884 () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807766$35$$35$d3Gu () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1130 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 () Int)
(declare-fun lit$36$size$32$$61$$32$ () Str)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun Toy.A.i2 () Int)
(declare-fun lq_tmp$36$x$35$$35$1097 () Int)
(declare-fun autolen () Int)
(declare-fun lit$36$$125$ () Str)
(declare-fun Toy.A.notThree () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1002 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807734$35$$35$d3FY () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH () Int)
(declare-fun old$35$$35$a3zO () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun Toy.A.MkD2 () Int)
(declare-fun Toy.A.$36$trModule () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807771$35$$35$d3Gz () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1002 () Int)
(declare-fun Toy.A.notEmpty () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$822 () Int)
(declare-fun Toy.A.$36$WMyStruct () Int)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807722$35$$35$d3FM () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 () Int)
(declare-fun lq_karg$36$VV$35$$35$821$35$$35$k_$35$$35$822 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807714$35$$35$d3FE () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807712$35$$35$d3FC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807718$35$$35$d3FI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 () Int)
(declare-fun lit$36$MyStruct () Str)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807716$35$$35$d3FG () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$884 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun Toy.A.size () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807738$35$$35$d3G2 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3Cf () Int)
(declare-fun lit$36$$39$MyStruct () Str)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792807727$35$$35$d3FR () Int)
(declare-fun Toy.A.myTest () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807725$35$$35$d3FP () Int)
(declare-fun lit$36$$39$MkD1 () Str)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807773$35$$35$d3GB () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1002 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun i$35$$35$a3zP () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$960 () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun Toy.A.$36$tc$39$MyStruct () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun fix$36$$36$krep_a3Cr () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun Toy.A.$36$tc$39$MkD1 () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$884 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3C9 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1002 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807740$35$$35$d3G4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807728$35$$35$d3FS () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$822 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807743$35$$35$d3G7 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807720$35$$35$d3FK () Str)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807741$35$$35$d3G5 () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun ds_d3Cs () Int)
(declare-fun lit$36$toy$45$package$45$a$45$0.1.0.0$45$inplace () Str)
(declare-fun lq_karg$36$VV$35$$35$959$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_tmp$36$x$35$$35$1111 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807724$35$$35$d3FO () Int)
(declare-fun Toy.A.one () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807742$35$$35$d3G6 () Str)
(declare-fun lq_karg$36$VV$35$$35$1043$35$$35$k_$35$$35$1044 () Int)
(declare-fun lit$36$$39$MkD2 () Str)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$822 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$951 () Int)
(declare-fun Toy.A.i0 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 () Int)
(declare-fun lq_tmp$36$x$35$$35$937 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807737$35$$35$d3G1 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807736$35$$35$d3G0 () Str)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1044 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807735$35$$35$d3FZ () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun Toy.A.d2 () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$723 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lit$36$MyStruct$32$$123$ () Str)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1002 () Int)
(declare-fun GHC.Show.$36$fShowInt () Int)
(declare-fun Toy.A.foo () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$960 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lq_karg$36$VV$35$$35$1129$35$$35$k_$35$$35$1130 () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_tmp$36$x$35$$35$875 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807767$35$$35$d3Gv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807769$35$$35$d3Gx () Int)
(declare-fun papp1 () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3BS () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun Toy.A.MkD1 () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1130 () Int)
(declare-fun lq_tmp$36$x$35$$35$861 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807765$35$$35$d3Gt () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lit$36$Toy.A () Str)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807713$35$$35$d3FD () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792807730$35$$35$d3FU () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807732$35$$35$d3FW () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$822 () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun Toy.A.MyStruct () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun Toy.A.i1 () Int)
(declare-fun ds_d3F2 () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1044 () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807726$35$$35$d3FQ () Str)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807772$35$$35$d3GA () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$884 () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1130 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun Toy.A.$36$tcMyStruct () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$822 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 () Int)
(declare-fun lq_karg$36$VV$35$$35$1001$35$$35$k_$35$$35$1002 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807733$35$$35$d3FX () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun Toy.A.enlargeMyStruct () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807768$35$$35$d3Gw () Int)
(declare-fun lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lq_tmp$36$x$35$$35$742 () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1044 () Int)
(declare-fun Toy.A.d1 () Int)
(declare-fun fix$36$$36$krep_a3Cp () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_tmp$36$x$35$$35$1220 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lit$36$D () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN () Int)
(declare-fun GHC.Base.$62$$62$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807721$35$$35$d3FL () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807707$35$$35$d3Fx () Int)
(declare-fun lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1130 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1044 () Int)
(declare-fun fix$36$$36$krep_a3Co () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807729$35$$35$d3FT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807770$35$$35$d3Gy () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun Toy.A.$36$fShowMyStruct () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)





(assert (distinct Toy.A.MkD1 Toy.A.MkD2))
(assert (distinct lit$36$D lit$36$Toy.A lit$36$MyStruct$32$$123$ lit$36$$39$MkD2 lit$36$toy$45$package$45$a$45$0.1.0.0$45$inplace lit$36$$39$MkD1 lit$36$$39$MyStruct lit$36$MyStruct lit$36$$125$ lit$36$size$32$$61$$32$))


(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$size$32$$61$$32$) 7))
(assert (= (strLen lit$36$$125$) 1))
(assert (= (strLen lit$36$MyStruct) 8))
(assert (= (strLen lit$36$$39$MyStruct) 9))
(assert (= (strLen lit$36$$39$MkD1) 5))
(assert (= (strLen lit$36$toy$45$package$45$a$45$0.1.0.0$45$inplace) 29))
(assert (= (strLen lit$36$$39$MkD2) 5))
(assert (= (strLen lit$36$MyStruct$32$$123$) 10))
(assert (= (strLen lit$36$Toy.A) 5))
(assert (= (strLen lit$36$D) 1))
(push 1)
(assert (and (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (= lq_anf$36$$35$$35$7205759403792807708$35$$35$d3Fy 10) (not GHC.Types.False) GHC.Types.True (= VV$35$$35$F$35$$35$22 lq_anf$36$$35$$35$7205759403792807708$35$$35$d3Fy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 Toy.A.notThree)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 Toy.A.one)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 Toy.A.notThree)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 Toy.A.one)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 Toy.A.notThree))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 Toy.A.one))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 Toy.A.notThree)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 Toy.A.one)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 Toy.A.notThree)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 Toy.A.one)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Toy.A.notThree)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Toy.A.one)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Toy.A.notThree)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 Toy.A.one)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792807713$35$$35$d3FD lit$36$toy$45$package$45$a$45$0.1.0.0$45$inplace) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= lq_anf$36$$35$$35$7205759403792807715$35$$35$d3FF lit$36$Toy.A) GHC.Types.True))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0))) (= lq_anf$36$$35$$35$7205759403792807718$35$$35$d3FI 12212980524696346138) (= lq_anf$36$$35$$35$7205759403792807719$35$$35$d3FJ 3766742284263291207) (= lq_anf$36$$35$$35$7205759403792807720$35$$35$d3FK lit$36$D) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (= lq_anf$36$$35$$35$7205759403792807722$35$$35$d3FM 0) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$17 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$17 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$17 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$17 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$17 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$17 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16))))))) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792807724$35$$35$d3FO 2502906637136563117) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= lq_anf$36$$35$$35$7205759403792807725$35$$35$d3FP 2769975375153418926) (= lq_anf$36$$35$$35$7205759403792807726$35$$35$d3FQ lit$36$$39$MkD1) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792807728$35$$35$d3FS 0)))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$15 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$15 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$15 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$15 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$15 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$15 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16))))))) (= lq_anf$36$$35$$35$7205759403792807729$35$$35$d3FT 9751079688820254141) (= lq_anf$36$$35$$35$7205759403792807730$35$$35$d3FU 7269604798603913692) (= lq_anf$36$$35$$35$7205759403792807731$35$$35$d3FV lit$36$$39$MkD2) (= Toy.A.d1 Toy.A.MkD1) (= lq_anf$36$$35$$35$7205759403792807733$35$$35$d3FX 0) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$14 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$14 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$14 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$14 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$14 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$14 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16))))))) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= lq_anf$36$$35$$35$7205759403792807734$35$$35$d3FY 8263758480563891136) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (= lq_anf$36$$35$$35$7205759403792807735$35$$35$d3FZ 6192326397127043463) (>= Toy.A.i1 0) (= lq_anf$36$$35$$35$7205759403792807736$35$$35$d3G0 lit$36$MyStruct) (not GHC.Types.False) (= lq_anf$36$$35$$35$7205759403792807738$35$$35$d3G2 0) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$13 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$13 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$13 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$13 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$13 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$13 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16)))))) (exists ((lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Int) (VV$35$$35$1085 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Int) (lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Int)) (and (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= VV$35$$35$1085 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1)) (exists ((VV$35$$35$F$35$$35$12 Int) (lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0)) (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 VV$35$$35$F$35$$35$12) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1))))))) (= lq_anf$36$$35$$35$7205759403792807740$35$$35$d3G4 11776238309683337503) (= lq_anf$36$$35$$35$7205759403792807741$35$$35$d3G5 8864195463402436485) (= lq_anf$36$$35$$35$7205759403792807742$35$$35$d3G6 lit$36$$39$MyStruct) (= Toy.A.d1 Toy.A.MkD1) (= lq_anf$36$$35$$35$7205759403792807744$35$$35$d3G8 0) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16)))))) (exists ((lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Int) (VV$35$$35$1085 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Int) (lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Int)) (and (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= VV$35$$35$1085 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1)) (exists ((VV$35$$35$F$35$$35$12 Int) (lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0)) (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 VV$35$$35$F$35$$35$12) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1))))))) (= Toy.A.d1 Toy.A.MkD1) (>= Toy.A.i2 0) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (= VV$35$$35$F$35$$35$1 (+ Toy.A.one Toy.A.one)) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$1 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (= lq_anf$36$$35$$35$7205759403792807712$35$$35$d3FC 5) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= VV$35$$35$F$35$$35$20 lq_anf$36$$35$$35$7205759403792807712$35$$35$d3FC) GHC.Types.True))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$20 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (= lq_anf$36$$35$$35$7205759403792807711$35$$35$d3FB 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True (= VV$35$$35$F$35$$35$21 lq_anf$36$$35$$35$7205759403792807711$35$$35$d3FB)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$21 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16)))))) (exists ((lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Int) (VV$35$$35$1085 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Int) (lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Int)) (and (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= VV$35$$35$1085 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1)) (exists ((VV$35$$35$F$35$$35$12 Int) (lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0)) (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 VV$35$$35$F$35$$35$12) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1))))))) (= Toy.A.d1 Toy.A.MkD1) (>= Toy.A.i2 0) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (= lq_anf$36$$35$$35$7205759403792807770$35$$35$d3Gy 0) (>= Toy.A.i1 0) (= lq_anf$36$$35$$35$7205759403792807771$35$$35$d3Gz lq_anf$36$$35$$35$7205759403792807770$35$$35$d3Gy) (not GHC.Types.False) (= (apply$35$$35$0 Toy.A.size lq_anf$36$$35$$35$7205759403792807772$35$$35$d3GA) lq_anf$36$$35$$35$7205759403792807771$35$$35$d3Gz) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True (and (>= VV$35$$35$F$35$$35$7 0) (= VV$35$$35$F$35$$35$7 Toy.A.i0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$7 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792807707$35$$35$d3Fx) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (= lq_anf$36$$35$$35$7205759403792807707$35$$35$d3Fx 1) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16)))))) (exists ((lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Int) (VV$35$$35$1085 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Int) (lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Int)) (and (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= VV$35$$35$1085 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1)) (exists ((VV$35$$35$F$35$$35$12 Int) (lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0)) (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 VV$35$$35$F$35$$35$12) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1))))))) (and (= VV$35$$35$F$35$$35$8 lq_anf$36$$35$$35$7205759403792807770$35$$35$d3Gy) (= VV$35$$35$F$35$$35$8 lq_anf$36$$35$$35$7205759403792807771$35$$35$d3Gz)) (= Toy.A.d1 Toy.A.MkD1) (>= Toy.A.i2 0) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (= lq_anf$36$$35$$35$7205759403792807770$35$$35$d3Gy 0) (>= Toy.A.i1 0) (= lq_anf$36$$35$$35$7205759403792807771$35$$35$d3Gz lq_anf$36$$35$$35$7205759403792807770$35$$35$d3Gy) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$8 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$24 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (not GHC.Types.False) GHC.Types.True))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$24 Toy.A.MkD1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16)))))) (exists ((lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Int) (VV$35$$35$1085 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Int) (lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Int)) (and (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= VV$35$$35$1085 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1)) (exists ((VV$35$$35$F$35$$35$12 Int) (lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0)) (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 VV$35$$35$F$35$$35$12) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1))))))) (= lq_anf$36$$35$$35$7205759403792807766$35$$35$d3Gu 10) (= lq_anf$36$$35$$35$7205759403792807767$35$$35$d3Gv lq_anf$36$$35$$35$7205759403792807766$35$$35$d3Gu) (= VV$35$$35$F$35$$35$9 (+ lq_anf$36$$35$$35$7205759403792807767$35$$35$d3Gv Toy.A.i1)) (= Toy.A.d1 Toy.A.MkD1) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) GHC.Types.True))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$9 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$849 Int) (lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Int)) (and (and (= VV$35$$35$849 fix$36$$36$krep_a3Cp) (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 fix$36$$36$krep_a3Cp) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)) (exists ((VV$35$$35$F$35$$35$18 Int) (lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807717$35$$35$d3FH) 0)) (and (= lq_karg$36$VV$35$$35$849$35$$35$k_$35$$35$850 VV$35$$35$F$35$$35$18) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$850 Toy.A.i1) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$850 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$850 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$850 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$850 Toy.A.d1)))))) (and (not (= Toy.A.foo 3)) (not (= Toy.A.foo 0)) (> Toy.A.foo Toy.A.one) (not (= Toy.A.foo Toy.A.one)) (>= Toy.A.foo 0) (>= Toy.A.foo Toy.A.one) (> Toy.A.foo 0)) (exists ((lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Int) (lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 Int) (VV$35$$35$925 Int)) (and (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 fix$36$$36$krep_a3Cr) (= VV$35$$35$925 fix$36$$36$krep_a3Cr)) (exists ((VV$35$$35$F$35$$35$16 Int) (lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807723$35$$35$d3FN) 0)) (and (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$926 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$926 Toy.A.i0) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$926 Toy.A.foo) (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$926 Toy.A.d1) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$926 Toy.A.i1) (= lq_karg$36$VV$35$$35$925$35$$35$k_$35$$35$926 VV$35$$35$F$35$$35$16)))))) (exists ((lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Int) (VV$35$$35$1085 Int) (lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Int) (lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 Int) (lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Int)) (and (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= VV$35$$35$1085 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 fix$36$$36$krep_a3Cq) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1)) (exists ((VV$35$$35$F$35$$35$12 Int) (lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3 Int)) (and (and (= (apply$35$$35$1 (as Toy.A.notEmpty Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792807739$35$$35$d3G3) 0)) (and (= lq_karg$36$Toy.A.d1$35$$35$k_$35$$35$1086 Toy.A.d1) (= lq_karg$36$Toy.A.foo$35$$35$k_$35$$35$1086 Toy.A.foo) (= lq_karg$36$Toy.A.one$35$$35$k_$35$$35$1086 Toy.A.one) (= lq_karg$36$Toy.A.i0$35$$35$k_$35$$35$1086 Toy.A.i0) (= lq_karg$36$VV$35$$35$1085$35$$35$k_$35$$35$1086 VV$35$$35$F$35$$35$12) (= lq_karg$36$Toy.A.i1$35$$35$k_$35$$35$1086 Toy.A.i1))))))) (= lq_anf$36$$35$$35$7205759403792807765$35$$35$d3Gt (+ old$35$$35$a3zO i$35$$35$a3zP)) (= Toy.A.d1 Toy.A.MkD1) (and (= VV$35$$35$F$35$$35$10 (+ old$35$$35$a3zO i$35$$35$a3zP)) (= VV$35$$35$F$35$$35$10 lq_anf$36$$35$$35$7205759403792807765$35$$35$d3Gt)) (= Toy.A.d2 Toy.A.MkD2) (>= Toy.A.i0 0) (= Toy.A.d2 Toy.A.MkD2) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (= Toy.A.one 1) (>= Toy.A.i1 0) (not GHC.Types.False) (and (>= Toy.A.notThree 0) (not (= Toy.A.notThree 3))) (>= i$35$$35$a3zP 0) (= lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs ds_d3Cs) GHC.Types.True (= lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs ds_d3Cs) (>= old$35$$35$a3zO 0) (and (= lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs ds_d3Cs) (= (apply$35$$35$0 Toy.A.size lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs) old$35$$35$a3zO) (= lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs (apply$35$$35$0 Toy.A.MyStruct old$35$$35$a3zO)) (= (apply$35$$35$0 Toy.A.size lq_anf$36$$35$$35$7205759403792807764$35$$35$d3Gs) old$35$$35$a3zO))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$10 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)

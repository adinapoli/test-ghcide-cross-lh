1:1-1:1::Evens.$trModule :: "GHC.Types.Module"
6:1-6:10::Evens.weAreEven :: "[{VV : GHC.Types.Int | VV mod 2 == 0}]"
6:18-6:24::lq_anf$##7205759403792803120 :: "GHC.Types.Int"
6:19-6:20::lq_anf$##7205759403792803117 :: "GHC.Types.Int"
6:21-6:23::lq_anf$##7205759403792803119 :: "GHC.Types.Int"
6:26-6:31::lq_anf$##7205759403792803125 :: "GHC.Types.Int"
6:27-6:28::lq_anf$##7205759403792803122 :: "GHC.Types.Int"
6:29-6:30::lq_anf$##7205759403792803124 :: "GHC.Types.Int"
6:33-6:34::lq_anf$##7205759403792803127 :: "GHC.Types.Int"
6:36-6:37::lq_anf$##7205759403792803129 :: "GHC.Types.Int"
6:39-6:42::lq_anf$##7205759403792803131 :: "GHC.Types.Int"
10:1-10:7::Evens.isEven :: "x1:{VV : GHC.Types.Int | VV >= 0} -> {v : GHC.Types.Bool | v <=> x1 mod 2 == 0}"
10:12-10:16::GHC.Types.True :: "{v : GHC.Types.Bool | v\n                      && v == True}"
11:12-11:17::GHC.Types.False :: "{v : GHC.Types.Bool | not v\n                      && v == False}"
12:12-12:30::GHC.Classes.not :: "x1:GHC.Types.Bool -> {v : GHC.Types.Bool | v <=> not x1}"
12:16-12:30::lq_anf$##7205759403792803108 :: "GHC.Types.Bool"
12:24-12:29::lq_anf$##7205759403792803107 :: "GHC.Types.Int"
12:25-12:26::ds_d2sJ :: "{v : GHC.Types.Int | v >= 0}"
12:27-12:28::lq_anf$##7205759403792803106 :: "GHC.Types.Int"
15:1-15:6::Evens.evens :: "{VV : GHC.Types.Int | VV >= 0} -> [{VV : GHC.Types.Int | VV mod 2 == 0}]"
15:7-15:8::n :: "{VV : GHC.Types.Int | VV >= 0}"
15:12-15:13::ds_d2sZ :: "{v : GHC.Types.Int | v < n\n                     && v /= n\n                     && v >= 0\n                     && v <= n}"
15:21-15:30::lq_anf$##7205759403792803115 :: "[{v : GHC.Types.Int | v < n}]"
15:27-15:28::lq_anf$##7205759403792803114 :: "GHC.Types.Int"
15:29-15:30::n :: "{v : GHC.Types.Int | v >= 0\n                     && v == n}"
15:32-15:40::lq_anf$##7205759403792803110 :: "GHC.Types.Bool"
15:39-15:40::ds_d2sZ :: "{v : GHC.Types.Int | v < n\n                     && v /= n\n                     && v >= 0\n                     && v <= n}"
18:1-18:6::Evens.range :: "x1:GHC.Types.Int -> x2:GHC.Types.Int -> [{v : GHC.Types.Int | x1 <= v\n                                                              && v < x2}]"
18:7-18:9::lo :: "GHC.Types.Int"
18:10-18:12::hi :: "GHC.Types.Int"
19:5-19:7::lo :: "{v : GHC.Types.Int | v == lo}"
19:10-19:12::hi :: "{v : GHC.Types.Int | v == hi}"
19:17-19:19::lo :: "{v : GHC.Types.Int | v == lo}"
19:22-19:37::lq_anf$##7205759403792803102 :: "[{v : GHC.Types.Int | v < hi}]"
19:28-19:34::lq_anf$##7205759403792803101 :: "GHC.Types.Int"
19:29-19:31::lo :: "{v : GHC.Types.Int | v == lo}"
19:32-19:33::lq_anf$##7205759403792803100 :: "GHC.Types.Int"
19:35-19:37::hi :: "{v : GHC.Types.Int | v == hi}"
20:17-20:19::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0} | VV == []}"
23:1-23:6::Evens.shift :: "[{VV : GHC.Types.Int | VV mod 2 == 0}] -> {VV : GHC.Types.Int | VV mod 2 == 0} -> [{VV : GHC.Types.Int | VV mod 2 == 0}]"
23:7-23:9::xs :: "[{VV : GHC.Types.Int | VV mod 2 == 0}]"
23:10-23:11::k :: "{VV : GHC.Types.Int | VV mod 2 == 0}"
23:15-23:16::ds_d2sz :: "{v : GHC.Types.Int | v mod 2 == 0}"
23:19-23:20::k :: "{v : GHC.Types.Int | v mod 2 == 0\n                     && v == k}"
23:28-23:30::xs :: "{v : [{v : GHC.Types.Int | v mod 2 == 0}] | len v >= 0\n                                            && v == xs}"
26:1-26:7::Evens.double :: "[{VV : GHC.Types.Int | VV >= 0}] -> [{VV : GHC.Types.Int | VV mod 2 == 0}]"
26:8-26:10::xs :: "[{VV : GHC.Types.Int | VV >= 0}]"
26:14-26:15::ds_d2sv :: "{v : GHC.Types.Int | v >= 0}"
26:18-26:19::ds_d2sv :: "{v : GHC.Types.Int | v >= 0}"
26:27-26:29::xs :: "{v : [{v : GHC.Types.Int | v >= 0}] | len v >= 0\n                                      && v == xs}"